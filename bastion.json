{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of the Storage for disks"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the VM1"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the VM2"
      }
    },    
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2_v2",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "2019-Datacenter"
      ],
      "metadata": {
        "description": "Image SKU"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "moduleFilePath": {
      "type": "string",
      "metadata": {
        "description": "Relative path for the DSC configuration module."
      },
      "defaultValue": "JordisWebsite.ps1.zip"
    },
    "configurationFunction": {
      "type": "string",
      "defaultValue": "JordisWebsite.ps1\\JordisWebsite",
      "metadata": {
        "description": "DSC configuration function to call"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "bastionHostName": "HostnBastian",
    "bastsubnetName": "sn-BastSubnet",
    "bastpublicIpAddressName": "PubIPBast",
    "bastexistingVNETName": "VN-BastVNet",
    "bastsubnetAddressPrefix": "10.0.1.0/27",
    "resourceGroup": "rg-JordisWebsite"
  },
  "resources": [  
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "name": "[variables('bastpublicIpAddressName')]",
      "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {}
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('bastexistingVNETName'), '/', variables('bastsubnetName'))]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressPrefix": "[variables('bastsubnetAddressPrefix')]"
            }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "name": "[variables('bastionHostName')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId(variables('resourceGroup'), 'Microsoft.Network/publicIpAddresses', variables('bastpublicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId(variables('resourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('bastexistingVNETName'),variables('bastsubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId(variables('resourceGroup'), 'Microsoft.Network/publicIpAddresses', variables('bastpublicIpAddressName'))]"
                            }
                        }
                    }
                ]
            },
            "tags": {}
        }

  ]
}
